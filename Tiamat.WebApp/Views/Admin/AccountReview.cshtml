@model IEnumerable<Tiamat.Models.Account>
@{
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
    ViewData["Title"] = "Pending Accounts";
}

@functions {
    string GetStatusClass(string status)
    {
        return status?.ToLower() switch
        {
            "active" => "status-active",
            "pending" => "status-pending",
            "failed" or "closed" => "status-red",
            _ => ""
        };
    }
}

<link rel="stylesheet" href="~/css/accountcenter.css" />

<div class="account-list-container">
    <h1 class="list-title">Pending Accounts</h1>


    <div class="accounts-card">
        <div class="accounts-card-header d-flex justify-content-between align-items-center">
            <h2>Review Pending</h2>
            <button class="btn btn-secondary" id="toggleListButton">
                Toggle Pending Accounts
            </button>
        </div>

        <div class="accounts-card-body">

            @if (!Model.Any())
            {
                <div class="no-accounts">No pending accounts found.</div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="account-table">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Platform</th>
                                <th>Broker Server</th>
                                <th>Broker Login</th>
                                <th>Broker Password</th>
                                <th>Created At</th>
                                <th class="action-cell">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="pendingAccountsTbody">
                            @foreach (var account in Model)
                            {
                                <tr>
                                    <td>@account.AccountName</td>
                                    <td>@account.Platform</td>
                                    <td>@account.BrokerServer</td>
                                    <td>@account.BrokerLogin</td>
                                    <td>
                                        <span class="broker-password masked"
                                              data-password="@account.BrokerPassword">
                                            [CENSORED]
                                        </span>
                                    </td>
                                    <td>@account.CreatedAt.ToShortDateString()</td>
                                    <td class="action-cell">
                                        <button type="button"
                                                class="btn-action btn-approve"
                                                data-bs-toggle="modal"
                                                data-bs-target="#acceptNotifyModal"
                                                data-bs-accountid="@account.Id">
                                            Accept
                                        </button>
                                        <button type="button"
                                                class="btn-action btn-deny"
                                                data-bs-toggle="modal"
                                                data-bs-target="#denyNotifyModal"
                                                data-bs-accountid="@account.Id">
                                            Deny
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <!-- This message shows when the list is toggled "off" -->
                <div id="toggledMessage"
                     style="display: none; margin-top: 1rem; font-style: italic;">
                    The pending accounts list is currently toggled off.
                </div>
            }
        </div>
    </div>
</div>

<!-- Deny Modal -->
<div class="modal fade"
     id="denyNotifyModal"
     tabindex="-1"
     aria-labelledby="denyNotifyModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="denyNotifyModalLabel">Application Denied</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="denyNotifyForm"
                      asp-action="DenyAccountWithNotification"
                      asp-controller="Admin"
                      method="post">

                    <input type="hidden" name="Id" id="denyAccountIdHidden" />
                    <input type="hidden" name="Title" value="Application Denied" />

                    <div class="mb-3">
                        <label for="notificationMessage" class="form-label fw-bold">
                            Reason / Message
                        </label>
                        <textarea class="form-control"
                                  id="notificationMessage"
                                  name="Message"
                                  rows="4"
                                  placeholder="Write a reason for denial..."></textarea>
                    </div>

                    <div class="form-check mb-3">
                        <input class="form-check-input"
                               type="checkbox"
                               id="useDefaultDenyMessage"
                               name="useDefaultDenyMessage" />
                        <label class="form-check-label" for="useDefaultDenyMessage">
                            Use default denial message
                        </label>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary"
                                data-bs-dismiss="modal">
                            Cancel
                        </button>
                        <button type="submit" class="btn btn-primary">
                            Send
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade"
     id="acceptNotifyModal"
     tabindex="-1"
     aria-labelledby="acceptNotifyModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="acceptNotifyModalLabel">Application Approved</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="acceptNotifyForm"
                      asp-action="ApproveAccount"
                      asp-controller="Admin"
                      method="post">

                    <input type="hidden" name="Id" id="acceptAccountIdHidden" />
                    <input type="hidden" name="Title" value="Application Accepted" />

                    <div class="mb-3">
                        <label for="acceptMessage" class="form-label fw-bold">Message</label>
                        <textarea class="form-control"
                                  id="acceptMessage"
                                  name="Message"
                                  rows="4"
                                  placeholder="Write an acceptance message..."></textarea>
                    </div>

                    <div class="form-check mb-3">
                        <input class="form-check-input"
                               type="checkbox"
                               id="useDefaultAcceptMessage"
                               name="useDefaultMessage" />
                        <label class="form-check-label" for="useDefaultAcceptMessage">
                            Use default acceptance message
                        </label>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary"
                                data-bs-dismiss="modal">
                            Cancel
                        </button>
                        <button type="submit" class="btn btn-primary">
                            Send
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Show/hide broker password on click
        document.addEventListener('DOMContentLoaded', function () {
            var passwordEls = document.querySelectorAll('.broker-password');
            passwordEls.forEach(function (el) {
                el.addEventListener('click', function () {
                    var realPwd = el.getAttribute('data-password');
                    if (el.classList.contains('masked')) {
                        el.classList.remove('masked');
                        el.classList.add('unmasked');
                        el.textContent = realPwd;
                    } else {
                        el.classList.remove('unmasked');
                        el.classList.add('masked');
                        el.textContent = "[CENSORED]";
                    }
                });
            });

            // Deny modal
            var denyNotifyModal = document.getElementById('denyNotifyModal');
            denyNotifyModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var accountId = button.getAttribute('data-bs-accountid');
                document.getElementById('denyAccountIdHidden').value = accountId;
                document.getElementById('notificationMessage').value = "";
                document.getElementById('useDefaultDenyMessage').checked = false;
            });
            document.getElementById('useDefaultDenyMessage').addEventListener('change', function () {
                var messageArea = document.getElementById('notificationMessage');
                if (this.checked) {
                    messageArea.value = "After careful consideration, we regret to inform you that your application has been denied. We appreciate your interest, and if you have any questions or would like to reapply in the future, please do not hesitate to contact our support team.";
                } else {
                    messageArea.value = "";
                }
            });

            // Accept modal
            var acceptNotifyModal = document.getElementById('acceptNotifyModal');
            acceptNotifyModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var accountId = button.getAttribute('data-bs-accountid');
                document.getElementById('acceptAccountIdHidden').value = accountId;
                document.getElementById('acceptMessage').value = "";
                document.getElementById('useDefaultAcceptMessage').checked = false;
            });
            document.getElementById('useDefaultAcceptMessage').addEventListener('change', function () {
                var messageArea = document.getElementById('acceptMessage');
                if (this.checked) {
                    messageArea.value = "Your account has been approved! Welcome on board. We appreciate your trust in our platform and look forward to supporting you.";
                } else {
                    messageArea.value = "";
                }
            });

            var toggleButton = document.getElementById('toggleListButton');
            var tbody = document.getElementById('pendingAccountsTbody');
            var originalTbodyHTML = tbody ? tbody.innerHTML : "";
            var toggledMsg = document.getElementById('toggledMessage');

            toggleButton.addEventListener('click', function () {

                if (tbody.innerHTML.trim() !== "") {
                    tbody.innerHTML = "";
                    toggledMsg.style.display = "block";
                } else {
                    tbody.innerHTML = originalTbodyHTML;
                    toggledMsg.style.display = "none";
                }
            });
        });
    </script>
}
