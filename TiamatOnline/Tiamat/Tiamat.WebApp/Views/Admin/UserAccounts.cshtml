@model Tiamat.WebApp.Models.Admin.AccountsViewModel
@using Tiamat.Models
@{
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
    ViewData["Title"] = "Акаунти";
}

@functions {
    string GetStatusClass(AccountStatus status)
    {
        return status switch
        {
            AccountStatus.Active => "status-active",
            AccountStatus.Pending => "status-pending",
            AccountStatus.Failed or AccountStatus.Closed => "status-red",
            _ => ""
        };
    }
}

<style>
    :root {
        --primary-color: #4361ee;
        --primary-hover: #3a56d4;
        --secondary-color: #7209b7;
        --bg-gradient: linear-gradient(135deg, #4361ee, #7209b7);
        --text-color: #ffffff;
        --light-text: #f8f9fa;
        --card-bg: rgba(28, 28, 30, 0.95);
        --input-bg: rgba(40, 40, 45, 0.9);
        --shadow: 0 8px 30px rgba(0, 0, 0, 0.3);
        --border-radius: 12px;
        --transition: all 0.3s ease;
        --dark-bg: #121212;
        --darker-bg: #0a0a0a;
    }

    #particles-js {
        position: fixed !important;
        width: 100% !important;
        height: 100% !important;
        top: 0 !important;
        left: 0 !important;
        z-index: -1 !important;
    }

    .accounts-container {
        max-width: 1440px;
        margin: 2rem auto;
        padding: 0 2rem;
        animation: fadeIn 0.8s ease-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .page-title {
        font-size: 2.5rem;
        margin-bottom: 1.5rem;
        font-weight: 600;
        line-height: 1.3;
        color: var(--text-color);
        animation: fadeInDown 0.8s ease-out;
    }

    @@keyframes fadeInDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .search-card, .results-card, .accounts-card {
        background: var(--card-bg);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        margin-bottom: 2rem;
        border: 1px solid rgba(255, 255, 255, 0.05);
        position: relative;
        overflow: hidden;
    }

    .search-card::before, .results-card::before, .accounts-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: var(--bg-gradient);
    }

    .card-header {
        padding: 1.5rem 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 1px solid rgba(255, 255, 255, 0.05);
    }

    .card-header h2 {
        color: var(--text-color);
        font-size: 1.5rem;
        font-weight: 600;
        margin: 0;
    }

    .card-body {
        padding: 1.5rem 2rem;
    }

    .search-form {
        display: flex;
        gap: 1rem;
    }

    .form-control {
        flex: 1;
        padding: 0.75rem 1rem;
        background-color: var(--input-bg);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 8px;
        font-size: 1rem;
        transition: var(--transition);
        color: var(--text-color);
    }

    .form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
        outline: none;
    }

    .btn-search {
        padding: 0.75rem 1.5rem;
        background: var(--bg-gradient);
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
    }

    .btn-search:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(67, 97, 238, 0.2);
    }

    .table-responsive {
        overflow-x: auto;
        width: 100%;
    }

    .search-results-table, .accounts-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
    }

    .search-results-table th, .accounts-table th {
        text-align: left;
        padding: 1rem;
        color: var(--light-text);
        font-weight: 600;
        font-size: 0.9rem;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .search-results-table td, .accounts-table td {
        padding: 1rem;
        color: var(--light-text);
        font-size: 0.95rem;
        border-bottom: 1px solid rgba(255, 255, 255, 0.05);
    }

    .search-results-table tbody tr, .accounts-table tbody tr {
        transition: var(--transition);
    }

    .search-results-table tbody tr:hover, .accounts-table tbody tr:hover {
        background-color: rgba(255, 255, 255, 0.03);
    }

    .no-results {
        text-align: center;
        padding: 2rem;
        color: var(--light-text);
        font-size: 1.1rem;
    }

    .result-row {
        cursor: pointer;
    }

    .result-row:hover {
        background-color: rgba(255, 255, 255, 0.05);
    }

    .action-cell {
        display: flex;
        gap: 0.5rem;
    }

    .btn-action {
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 6px;
        font-size: 0.9rem;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
    }

    .btn-change-hwid {
        background: linear-gradient(135deg, #4361ee, #7209b7);
        color: white;
    }

    .btn-change-hwid:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(67, 97, 238, 0.2);
    }

    .status-pill {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        border-radius: 50px;
        font-size: 0.8rem;
        font-weight: 600;
    }

    .status-active {
        color: #2ed573;
        background-color: rgba(46, 213, 115, 0.1);
        border: 1px solid rgba(46, 213, 115, 0.3);
    }

    .status-pending {
        color: #ffa502;
        background-color: rgba(255, 165, 2, 0.1);
        border: 1px solid rgba(255, 165, 2, 0.3);
    }

    .status-red {
        color: #ff4d4d;
        background-color: rgba(255, 77, 77, 0.1);
        border: 1px solid rgba(255, 77, 77, 0.3);
    }

    .modal-content {
        background-color: var(--card-bg);
        border: 1px solid rgba(255, 255, 255, 0.05);
        border-radius: var(--border-radius);
    }

    .modal-header {
        border-bottom: 1px solid rgba(255, 255, 255, 0.05);
        padding: 1.5rem 2rem;
    }

    .modal-title {
        color: var(--text-color);
        font-weight: 600;
    }

    .modal-body {
        padding: 1.5rem 2rem;
    }

    .modal-footer {
        border-top: 1px solid rgba(255, 255, 255, 0.05);
        padding: 1.5rem 2rem;
    }

    .form-label {
        color: var(--light-text);
        margin-bottom: 0.5rem;
        display: block;
    }

    .accounts-section {
        margin-top: 2rem;
    }
    
    .accounts-title {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-bottom: 1rem;
    }
    
    .accounts-title h3 {
        margin: 0;
        font-size: 1.5rem;
        color: var(--text-color);
    }
    
    .accounts-title .username {
        color: var(--primary-color);
        font-weight: 600;
    }
    
    .text-danger {
        color: #ff4d4d !important;
        font-size: 0.9rem;
    }

    @@media (max-width: 1200px) {
        .accounts-container {
            padding: 0 1.5rem;
        }
    }

    @@media (max-width: 992px) {
        .card-header {
            flex-direction: column;
            gap: 1rem;
            align-items: flex-start;
        }
        
        .search-form {
            flex-direction: column;
            width: 100%;
        }
    }

    @@media (max-width: 768px) {
        .accounts-container {
            padding: 0 1rem;
        }

        .page-title {
            font-size: 2rem;
        }

        .card-header, .card-body {
            padding: 1.5rem;
        }

        .search-results-table th, .search-results-table td, 
        .accounts-table th, .accounts-table td {
            padding: 0.75rem 0.5rem;
        }
    }
</style>

<div id="particles-js"></div>

<div class="accounts-container">
    <h1 class="page-title">Акаунти</h1>

    <div class="search-card">
        <div class="card-header">
            <h2><i class="bi bi-search me-2"></i>Търсене на потребител</h2>
        </div>
        <div class="card-body">
            <form asp-action="UserAccounts" method="get" class="search-form">
                <input type="text" name="searchTerm" class="form-control" value="@Model.SearchTerm" placeholder="Търсене по потребителско име или имейл...">
                <button type="submit" class="btn-search">
                    <i class="bi bi-search me-2"></i>Търсене
                </button>
            </form>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.SearchTerm) && Model.SearchResults.Any())
    {
        <div class="results-card">
            <div class="card-header">
                <h2><i class="bi bi-people me-2"></i>Резултати от търсенето</h2>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="search-results-table">
                        <thead>
                            <tr>
                                <th><i class="bi bi-person me-2"></i>Потребителско име</th>
                                <th><i class="bi bi-envelope me-2"></i>Имейл</th>
                                <th><i class="bi bi-tools me-2"></i>Действия</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model.SearchResults)
                            {
                                <tr>
                                    <td>@user.UserName</td>
                                    <td>@user.Email</td>
                                    <td>
                                        <a asp-action="UserAccounts" asp-route-userId="@user.Id" class="btn-action btn-change-hwid">
                                            <i class="bi bi-list-ul me-1"></i>Преглед на акаунти
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(Model.SearchTerm) && !Model.SearchResults.Any())
    {
        <div class="results-card">
            <div class="card-header">
                <h2><i class="bi bi-people me-2"></i>Резултати от търсенето</h2>
            </div>
            <div class="card-body">
                <div class="no-results">
                    <i class="bi bi-search mb-3" style="font-size: 2rem; opacity: 0.5; display: block;"></i>
                    Няма намерени потребители, отговарящи на зададените критерии.
                </div>
            </div>
        </div>
    }

    @if (Model.SelectedUserId.HasValue)
    {
        <div class="accounts-card">
            <div class="card-header">
                <div class="accounts-title">
                    <h2><i class="bi bi-currency-exchange me-2"></i>Акаунти на <span class="username">@Model.SelectedUserName</span></h2>
                </div>
            </div>
            <div class="card-body">
                @if (!Model.UserAccounts.Any())
                {
                    <div class="no-results">
                        <i class="bi bi-credit-card mb-3" style="font-size: 2rem; opacity: 0.5; display: block;"></i>
                        Потребителят няма създадени акаунти.
                    </div>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="accounts-table">
                            <thead>
                                <tr>
                                    <th><i class="bi bi-person-badge me-2"></i>Име</th>
                                    <th><i class="bi bi-layers me-2"></i>Платформа</th>
                                    <th><i class="bi bi-server me-2"></i>Брокерски сървър</th>
                                    <th><i class="bi bi-person-lock me-2"></i>Брокерски логин</th>
                                    <th><i class="bi bi-cpu me-2"></i>HWID</th>
                                    <th><i class="bi bi-activity me-2"></i>Статус</th>
                                    <th><i class="bi bi-tools me-2"></i>Действия</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var account in Model.UserAccounts)
                                {
                                    <tr>
                                        <td>@account.AccountName</td>
                                        <td>@account.Platform</td>
                                        <td>@account.BrokerServer</td>
                                        <td>@account.BrokerLogin</td>
                                        <td>
                                            @if (string.IsNullOrEmpty(account.Affiliated_HWID))
                                            {
                                                <span class="text-muted">Няма HWID</span>
                                            }
                                            else
                                            {
                                                @account.Affiliated_HWID
                                            }
                                        </td>
                                        <td>
                                            <span class="status-pill @GetStatusClass(account.Status)">
                                                @account.Status
                                            </span>
                                        </td>
                                        <td class="action-cell">
                                            <button type="button"
                                                    class="btn-action btn-change-hwid"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#changeHwidModal"
                                                    data-account-id="@account.Id"
                                                    data-account-name="@account.AccountName"
                                                    data-current-hwid="@account.Affiliated_HWID">
                                                <i class="bi bi-cpu me-1"></i>Промяна на HWID
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    }
</div>

<!-- Change HWID Modal -->
<div class="modal fade" id="changeHwidModal" tabindex="-1" aria-labelledby="changeHwidModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="changeHwidModalLabel"><i class="bi bi-cpu me-2"></i>Промяна на HWID</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="changeHwidForm" asp-action="ChangeHwid" asp-controller="Admin" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" id="accountId" name="AccountId" />
                    <input type="hidden" id="accountName" name="AccountName" />

                    <div class="mb-3">
                        <label for="currentHwid" class="form-label">Текущ HWID</label>
                        <input type="text" class="form-control" id="currentHwid" readonly disabled />
                    </div>

                    <div class="mb-3">
                        <label for="newHwid" class="form-label">Нов HWID</label>
                        <input type="text" class="form-control" id="newHwid" name="NewHwid" required />
                        <span id="newHwidError" class="text-danger"></span>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            <i class="bi bi-x me-1"></i>Отказ
                        </button>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-check2 me-1"></i>Запазване
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/particles.js@2.0.0/particles.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            particlesJS('particles-js', {
                "particles": {
                    "number": {
                        "value": 80,
                        "density": {
                            "enable": true,
                            "value_area": 800
                        }
                    },
                    "color": {
                        "value": "#4361ee"
                    },
                    "shape": {
                        "type": "circle",
                        "stroke": {
                            "width": 0,
                            "color": "#000000"
                        },
                        "polygon": {
                            "nb_sides": 5
                        }
                    },
                    "opacity": {
                        "value": 0.5,
                        "random": false,
                        "anim": {
                            "enable": false,
                            "speed": 1,
                            "opacity_min": 0.1,
                            "sync": false
                        }
                    },
                    "size": {
                        "value": 3,
                        "random": true,
                        "anim": {
                            "enable": false,
                            "speed": 40,
                            "size_min": 0.1,
                            "sync": false
                        }
                    },
                    "line_linked": {
                        "enable": true,
                        "distance": 150,
                        "color": "#7209b7",
                        "opacity": 0.4,
                        "width": 1
                    },
                    "move": {
                        "enable": true,
                        "speed": 2,
                        "direction": "none",
                        "random": false,
                        "straight": false,
                        "out_mode": "out",
                        "bounce": false,
                        "attract": {
                            "enable": false,
                            "rotateX": 600,
                            "rotateY": 1200
                        }
                    }
                },
                "interactivity": {
                    "detect_on": "canvas",
                    "events": {
                        "onhover": {
                            "enable": true,
                            "mode": "grab"
                        },
                        "onclick": {
                            "enable": true,
                            "mode": "push"
                        },
                        "resize": true
                    },
                    "modes": {
                        "grab": {
                            "distance": 140,
                            "line_linked": {
                                "opacity": 1
                            }
                        },
                        "bubble": {
                            "distance": 400,
                            "size": 40,
                            "duration": 2,
                            "opacity": 8,
                            "speed": 3
                        },
                        "repulse": {
                            "distance": 200,
                            "duration": 0.4
                        },
                        "push": {
                            "particles_nb": 4
                        },
                        "remove": {
                            "particles_nb": 2
                        }
                    }
                },
                "retina_detect": true
            });

            // Change HWID modal
            var changeHwidModal = document.getElementById('changeHwidModal');
            changeHwidModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var accountId = button.getAttribute('data-account-id');
                var accountName = button.getAttribute('data-account-name');
                var currentHwid = button.getAttribute('data-current-hwid');
                
                document.getElementById('accountId').value = accountId;
                document.getElementById('accountName').value = accountName;
                document.getElementById('currentHwid').value = currentHwid || 'Не е зададен';
                document.getElementById('newHwid').value = '';
                document.getElementById('changeHwidModalLabel').textContent = 'Промяна на HWID за ' + accountName;
            });
            
            // Validate HWID form
            var changeHwidForm = document.getElementById('changeHwidForm');
            changeHwidForm.addEventListener('submit', function(e) {
                var newHwid = document.getElementById('newHwid').value;
                var newHwidError = document.getElementById('newHwidError');
                
                newHwidError.textContent = '';
                
                if (!newHwid.trim()) {
                    newHwidError.textContent = 'Новият HWID е задължителен';
                    e.preventDefault();
                    return false;
                }
                
                if (newHwid.length < 3 || newHwid.length > 100) {
                    newHwidError.textContent = 'HWID трябва да бъде между 3 и 100 символа';
                    e.preventDefault();
                    return false;
                }
                
                return true;
            });
            
            // Show alert if needed
            @if (TempData["AlertMessage"] != null)
            {
                <text>
                iziToast.@(TempData["AlertType"] ?? "info")({
                    title: '@TempData["AlertTitle"]',
                    message: '@TempData["AlertMessage"]',
                    position: 'topRight'
                });
                </text>
            }
        });
    </script>

    @Html.Partial("_IziToastPartial")
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
