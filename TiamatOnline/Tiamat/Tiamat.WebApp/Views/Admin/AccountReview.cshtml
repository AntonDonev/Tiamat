@model IEnumerable<Tiamat.Models.Account>
@{
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
    ViewData["Title"] = "Изчакващи акаунти";
}

@functions {
    string GetStatusClass(string status)
    {
        return status?.ToLower() switch
        {
            "active" => "status-active",
            "pending" => "status-pending",
            "failed" or "closed" => "status-red",
            _ => ""
        };
    }
}

<style>
    :root {
        --primary-color: #4361ee;
        --primary-hover: #3a56d4;
        --secondary-color: #7209b7;
        --bg-gradient: linear-gradient(135deg, #4361ee, #7209b7);
        --text-color: #ffffff;
        --light-text: #f8f9fa;
        --card-bg: rgba(28, 28, 30, 0.95);
        --input-bg: rgba(40, 40, 45, 0.9);
        --shadow: 0 8px 30px rgba(0, 0, 0, 0.3);
        --border-radius: 12px;
        --transition: all 0.3s ease;
        --dark-bg: #121212;
        --darker-bg: #0a0a0a;
    }

    #particles-js {
        position: fixed !important;
        width: 100% !important;
        height: 100% !important;
        top: 0 !important;
        left: 0 !important;
        z-index: -1 !important;
    }

    .account-list-container {
        max-width: 1440px;
        margin: 2rem auto;
        padding: 0 2rem;
        animation: fadeIn 0.8s ease-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .list-title {
        font-size: 2.5rem;
        margin-bottom: 1.5rem;
        font-weight: 600;
        line-height: 1.3;
        color: var(--text-color);
        animation: fadeInDown 0.8s ease-out;
    }

    @@keyframes fadeInDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .accounts-card {
        background: var(--card-bg);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        margin-bottom: 2rem;
        border: 1px solid rgba(255, 255, 255, 0.05);
        position: relative;
        overflow: hidden;
        animation: fadeInRight 0.8s ease-out;
    }

    .accounts-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: var(--bg-gradient);
    }

    @@keyframes fadeInRight {
        from {
            opacity: 0;
            transform: translateX(30px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    .accounts-card-header {
        padding: 1.5rem 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 1px solid rgba(255, 255, 255, 0.05);
    }

    .accounts-card-header h2 {
        color: var(--text-color);
        font-size: 1.5rem;
        font-weight: 600;
        margin: 0;
    }

    .accounts-card-body {
        padding: 1.5rem 2rem;
    }

    .table-responsive {
        overflow-x: auto;
        width: 100%;
    }

    .account-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
    }

    .account-table th {
        text-align: left;
        padding: 1rem;
        color: var(--light-text);
        font-weight: 600;
        font-size: 0.9rem;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .account-table td {
        padding: 1rem;
        color: var(--light-text);
        font-size: 0.95rem;
        border-bottom: 1px solid rgba(255, 255, 255, 0.05);
    }

    .account-table tbody tr {
        transition: var(--transition);
    }

    .account-table tbody tr:hover {
        background-color: rgba(255, 255, 255, 0.03);
    }

    .no-accounts {
        text-align: center;
        padding: 2rem;
        color: var(--light-text);
        font-size: 1.1rem;
    }

    .action-cell {
        display: flex;
        gap: 0.5rem;
    }

    .btn-action {
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 6px;
        font-size: 0.9rem;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
    }

    .btn-approve {
        background: linear-gradient(135deg, #2ed573, #007bff);
        color: white;
    }

    .btn-deny {
        background: linear-gradient(135deg, #ff4757, #ff6b81);
        color: white;
    }

    .btn-approve:hover, .btn-deny:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    .btn-secondary {
        padding: 0.6rem 1.2rem;
        background: var(--input-bg);
        color: white;
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 8px;
        font-size: 0.9rem;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
    }

    .btn-secondary:hover {
        background: rgba(60, 60, 65, 0.9);
        transform: translateY(-2px);
    }

    .broker-password {
        color: var(--primary-color);
        font-weight: 500;
        transition: var(--transition);
    }

    .broker-password:hover {
        color: var(--secondary-color);
    }

    .status-active {
        color: #2ed573;
        background-color: rgba(46, 213, 115, 0.1);
        border-color: rgba(46, 213, 115, 0.3);
    }

    .status-pending {
        color: #ffa502;
        background-color: rgba(255, 165, 2, 0.1);
        border-color: rgba(255, 165, 2, 0.3);
    }

    .status-red {
        color: #ff4d4d;
        background-color: rgba(255, 77, 77, 0.1);
        border-color: rgba(255, 77, 77, 0.3);
    }

    .modal-content {
        background-color: var(--card-bg);
        border: 1px solid rgba(255, 255, 255, 0.05);
        border-radius: var(--border-radius);
    }

    .modal-header {
        border-bottom: 1px solid rgba(255, 255, 255, 0.05);
        padding: 1.5rem 2rem;
    }

    .modal-title {
        color: var(--text-color);
        font-weight: 600;
    }

    .modal-body {
        padding: 1.5rem 2rem;
    }

    .modal-footer {
        border-top: 1px solid rgba(255, 255, 255, 0.05);
        padding: 1.5rem 2rem;
    }

    .form-label {
        color: var(--light-text);
        margin-bottom: 0.5rem;
    }

    .form-control {
        width: 100%;
        padding: 0.75rem 1rem;
        background-color: var(--input-bg);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 8px;
        font-size: 1rem;
        transition: var(--transition);
        color: var(--text-color);
    }

    .form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
        outline: none;
    }

    .form-check-input {
        background-color: var(--input-bg);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .form-check-input:checked {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
    }

    .form-check-label {
        color: var(--light-text);
    }

    .btn-primary {
        padding: 0.75rem 1.5rem;
        background: var(--bg-gradient);
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(67, 97, 238, 0.2);
    }

    .table-row-appear {
        animation: tableRowAppear 0.5s ease-out forwards;
    }

    @@keyframes tableRowAppear {
        from {
            opacity: 0;
            transform: translateY(10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    .text-danger {
        color: #ff4d4d !important;
        font-size: 0.9rem;
    }

    .validation-summary-errors {
        display: block;
    }

    .validation-summary-valid {
        display: none;
    }

    @@media (max-width: 1200px) {
        .account-list-container {
            padding: 0 1.5rem;
        }
    }

    @@media (max-width: 992px) {
        .accounts-card-header {
            flex-direction: column;
            gap: 1rem;
            align-items: flex-start;
        }
    }

    @@media (max-width: 768px) {
        .account-list-container {
            padding: 0 1rem;
        }

        .list-title {
            font-size: 2rem;
        }

        .accounts-card-header, .accounts-card-body {
            padding: 1.5rem;
        }

        .account-table th, .account-table td {
            padding: 0.75rem 0.5rem;
        }
    }
</style>

<div id="particles-js"></div>

<div class="account-list-container">
    <h1 class="list-title">Изчакващи акаунти</h1>

    <div class="accounts-card">
        <div class="accounts-card-header">
            <h2><i class="bi bi-clock-history me-2"></i>Преглед на изчакващи</h2>
            <button class="btn-secondary" id="toggleListButton">
                <i class="bi bi-arrow-repeat me-2"></i>Превключване на изчакващи акаунти
            </button>
        </div>

        <div class="accounts-card-body">
            @if (!Model.Any())
            {
                    <div class="no-accounts">
                        <i class="bi bi-search mb-3" style="font-size: 2rem; opacity: 0.5; display: block;"></i>
                        Няма намерени изчакващи акаунти.
                    </div>
            }
            else
            {
                    <div class="table-responsive">
                        <table class="account-table">
                            <thead>
                                <tr>
                                    <th><i class="bi bi-person-badge me-2"></i>Име</th>
                                    <th><i class="bi bi-layers me-2"></i>Платформа</th>
                                    <th><i class="bi bi-server me-2"></i>Брокерски сървър</th>
                                    <th><i class="bi bi-person-lock me-2"></i>Брокерски логин</th>
                                    <th><i class="bi bi-key me-2"></i>Брокерска парола</th>
                                    <th><i class="bi bi-calendar-date me-2"></i>Създаден на</th>
                                    <th class="action-cell"><i class="bi bi-tools me-2"></i>Действия</th>
                                </tr>
                            </thead>
                            <tbody id="pendingAccountsTbody">
                            @foreach (var account in Model.Select((value, i) => new { Value = value, Index = i }))
                            {
                                        <tr class="table-row-appear" style="animation-delay: @(account.Index * 0.1)s">
                                            <td>@account.Value.AccountName</td>
                                            <td>@account.Value.Platform</td>
                                            <td>@account.Value.BrokerServer</td>
                                            <td>@account.Value.BrokerLogin</td>
                                            <td>
                                                <span class="broker-password"
                                                      data-password="@account.Value.BrokerPassword"
                                                      style="cursor: pointer;">
                                                    <i class="bi bi-clipboard me-1"></i>Копирай парола
                                                </span>
                                            </td>
                                            <td>@account.Value.CreatedAt.ToShortDateString()</td>
                                            <td class="action-cell">
                                                <button type="button"
                                                        class="btn-action btn-approve"
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#acceptNotifyModal"
                                                        data-bs-accountid="@account.Value.Id">
                                                    <i class="bi bi-check-circle me-1"></i>Приемане
                                                </button>
                                                <button type="button"
                                                        class="btn-action btn-deny"
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#denyNotifyModal"
                                                        data-bs-accountid="@account.Value.Id">
                                                    <i class="bi bi-x-circle me-1"></i>Отказване
                                                </button>
                                            </td>
                                        </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                    <div id="toggledMessage" style="display: none; margin-top: 1rem; font-style: italic; color: var(--light-text); text-align: center;">
                        <i class="bi bi-info-circle me-2"></i>Списъкът с изчакващи акаунти е изключен в момента.
                    </div>
            }
        </div>
    </div>
</div>

<!-- Deny Modal -->
<div class="modal fade" id="denyNotifyModal" tabindex="-1" aria-labelledby="denyNotifyModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="denyNotifyModalLabel"><i class="bi bi-x-octagon me-2"></i>Отказан кандидат</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="denyNotifyForm" asp-action="DenyAccountWithNotification" asp-controller="Admin" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" name="Id" id="denyAccountIdHidden" />
                    <input type="hidden" name="Title" value="Отказан кандидат" />

                    <div class="mb-3">
                        <label for="notificationMessage" class="form-label fw-bold">
                            <i class="bi bi-exclamation-circle me-2"></i>Причина / Съобщение
                        </label>
                        <textarea class="form-control" id="notificationMessage" name="Message" rows="4" placeholder="Напишете причина за отказ..."></textarea>
                        <span id="messageError" class="text-danger"></span>
                    </div>

                    <div class="form-check mb-3">
                        <input type="hidden" name="UseDefaultDenyMessage" value="false" />
                        <input class="form-check-input" id="useDefaultDenyMessage" name="UseDefaultDenyMessage" type="checkbox" value="true" />
                        <label class="form-check-label" for="useDefaultDenyMessage">
                            Използвай стандартно съобщение за отказ
                        </label>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            <i class="bi bi-x me-1"></i>Отказ
                        </button>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-send me-1"></i>Изпращане
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Accept Modal -->
<div class="modal fade" id="acceptNotifyModal" tabindex="-1" aria-labelledby="acceptNotifyModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="acceptNotifyModalLabel"><i class="bi bi-check-circle me-2"></i>Одобрен кандидат</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="acceptNotifyForm" asp-action="ApproveAccount" asp-controller="Admin" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" name="Id" id="acceptAccountIdHidden" />
                    <input type="hidden" name="Title" value="Приет кандидат" />

                    <div class="mb-3">
                        <label for="vpsName" class="form-label fw-bold"><i class="bi bi-hdd-network me-2"></i>Име на VPS</label>
                        <input type="text" class="form-control" id="vpsName" name="VPSName" placeholder="Въведете име на VPS..." />
                        <span id="vpsNameError" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label for="affiliatedHWID" class="form-label fw-bold"><i class="bi bi-cpu me-2"></i>Свързан HWID</label>
                        <input type="text" class="form-control" id="affiliatedHWID" name="AffiliatedHWID" placeholder="Въведете свързан HWID..." />
                        <span id="affiliatedHWIDError" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label for="acceptMessage" class="form-label fw-bold"><i class="bi bi-chat-text me-2"></i>Съобщение</label>
                        <textarea class="form-control" id="acceptMessage" name="Message" rows="4" placeholder="Напишете съобщение за одобрение..."></textarea>
                        <span id="acceptMessageError" class="text-danger"></span>
                    </div>

                    <div class="form-check mb-3">
                        <input type="hidden" name="UseDefaultMessage" value="false" />
                        <input class="form-check-input" id="useDefaultAcceptMessage" name="UseDefaultMessage" type="checkbox" value="true" />
                        <label class="form-check-label" for="useDefaultAcceptMessage">
                            Използвай стандартно съобщение за одобрение
                        </label>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            <i class="bi bi-x me-1"></i>Отказ
                        </button>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-send me-1"></i>Изпращане
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/particles.js@2.0.0/particles.min.js"></script>
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                particlesJS('particles-js', {
                    "particles": {
                        "number": {
                            "value": 80,
                            "density": {
                                "enable": true,
                                "value_area": 800
                            }
                        },
                        "color": {
                            "value": "#4361ee"
                        },
                        "shape": {
                            "type": "circle",
                            "stroke": {
                                "width": 0,
                                "color": "#000000"
                            },
                            "polygon": {
                                "nb_sides": 5
                            }
                        },
                        "opacity": {
                            "value": 0.5,
                            "random": false,
                            "anim": {
                                "enable": false,
                                "speed": 1,
                                "opacity_min": 0.1,
                                "sync": false
                            }
                        },
                        "size": {
                            "value": 3,
                            "random": true,
                            "anim": {
                                "enable": false,
                                "speed": 40,
                                "size_min": 0.1,
                                "sync": false
                            }
                        },
                        "line_linked": {
                            "enable": true,
                            "distance": 150,
                            "color": "#7209b7",
                            "opacity": 0.4,
                            "width": 1
                        },
                        "move": {
                            "enable": true,
                            "speed": 2,
                            "direction": "none",
                            "random": false,
                            "straight": false,
                            "out_mode": "out",
                            "bounce": false,
                            "attract": {
                                "enable": false,
                                "rotateX": 600,
                                "rotateY": 1200
                            }
                        }
                    },
                    "interactivity": {
                        "detect_on": "canvas",
                        "events": {
                            "onhover": {
                                "enable": true,
                                "mode": "grab"
                            },
                            "onclick": {
                                "enable": true,
                                "mode": "push"
                            },
                            "resize": true
                        },
                        "modes": {
                            "grab": {
                                "distance": 140,
                                "line_linked": {
                                    "opacity": 1
                                }
                            },
                            "bubble": {
                                "distance": 400,
                                "size": 40,
                                "duration": 2,
                                "opacity": 8,
                                "speed": 3
                            },
                            "repulse": {
                                "distance": 200,
                                "duration": 0.4
                            },
                            "push": {
                                "particles_nb": 4
                            },
                            "remove": {
                                "particles_nb": 2
                            }
                        }
                    },
                    "retina_detect": true
                });

                var tbody = document.getElementById('pendingAccountsTbody');
                tbody.addEventListener('click', function (event) {
                    if (event.target && event.target.matches('.broker-password, .broker-password *')) {
                        var element = event.target;
                        if (!element.classList.contains('broker-password')) {
                            element = element.closest('.broker-password');
                        }
                        var realPwd = element.getAttribute('data-password');
                        navigator.clipboard.writeText(realPwd)
                            .then(function () {
                                iziToast.success({
                                    title: 'Копирано!',
                                    message: 'Паролата е копирана в клипборда!',
                                    position: 'topRight'
                                });
                            })
                            .catch(function (err) {
                                console.error('Неуспешно копиране на парола: ', err);
                            });
                    }
                });

                var toggleButton = document.getElementById('toggleListButton');
                var originalTbodyHTML = tbody.innerHTML;
                var toggledMsg = document.getElementById('toggledMessage');

                toggleButton.addEventListener('click', function () {
                    if (tbody.innerHTML.trim() !== "") {
                        tbody.innerHTML = "";
                        toggledMsg.style.display = "block";
                    } else {
                        tbody.innerHTML = originalTbodyHTML;
                        toggledMsg.style.display = "none";
                    }
                });

                var denyNotifyModal = document.getElementById('denyNotifyModal');
                denyNotifyModal.addEventListener('show.bs.modal', function (event) {
                    var button = event.relatedTarget;
                    var accountId = button.getAttribute('data-bs-accountid');
                    document.getElementById('denyAccountIdHidden').value = accountId;
                    document.getElementById('notificationMessage').value = "";
                    document.getElementById('useDefaultDenyMessage').checked = false;
                });

                document.getElementById('useDefaultDenyMessage').addEventListener('change', function () {
                    var messageArea = document.getElementById('notificationMessage');
                    var messageError = document.getElementById('messageError');
                    
                    if (this.checked) {
                        messageArea.value = "След внимателно разглеждане, съжаляваме да ви информираме, че вашето заявление е отхвърлено. Ценим вашия интерес и ако имате въпроси или бихте искали да кандидатствате отново в бъдеще, не се колебайте да се свържете с нашия екип за поддръжка.";
                        messageError.textContent = '';
                    } else {
                        messageArea.value = "";
                        messageError.textContent = '';
                    }
                });

                var acceptNotifyModal = document.getElementById('acceptNotifyModal');
                acceptNotifyModal.addEventListener('show.bs.modal', function (event) {
                    var button = event.relatedTarget;
                    var accountId = button.getAttribute('data-bs-accountid');
                    document.getElementById('acceptAccountIdHidden').value = accountId;
                    document.getElementById('acceptMessage').value = "";
                    document.getElementById('vpsName').value = "";
                    document.getElementById('affiliatedHWID').value = "";
                    document.getElementById('useDefaultAcceptMessage').checked = false;
                });

                document.getElementById('useDefaultAcceptMessage').addEventListener('change', function () {
                    var messageArea = document.getElementById('acceptMessage');
                    var acceptMessageError = document.getElementById('acceptMessageError');
                    
                    if (this.checked) {
                        messageArea.value = "Вашият акаунт е одобрен! Добре дошли на борда. Ценим вашето доверие и се надяваме да ви върви.";
                        acceptMessageError.textContent = '';
                    } else {
                        messageArea.value = "";
                        acceptMessageError.textContent = '';
                    }
                });

                const rows = document.querySelectorAll('.table-row-appear');
                rows.forEach((row, index) => {
                    row.style.opacity = '0';
                    setTimeout(() => {
                        row.style.opacity = '1';
                        row.style.transform = 'translateY(0)';
                    }, 100 * index);
                });

                function validateDenyForm() {
                    const message = document.getElementById('notificationMessage').value;
                    const useDefault = document.getElementById('useDefaultDenyMessage').checked;
                    const messageError = document.getElementById('messageError');

                    messageError.textContent = '';

                    if (!useDefault && !message.trim()) {
                        messageError.textContent = 'Съобщението е задължително';
                        return false;
                    }

                    if (!useDefault && (message.length < 10 || message.length > 1000)) {
                        messageError.textContent = 'Съобщението трябва да бъде между 10 и 1000 символа';
                        return false;
                    }

                    return true;
                }

                function validateAcceptForm() {
                    const vpsName = document.getElementById('vpsName').value;
                    const affiliatedHWID = document.getElementById('affiliatedHWID').value;
                    const message = document.getElementById('acceptMessage').value;
                    const useDefaultMessage = document.getElementById('useDefaultAcceptMessage').checked;
                    const vpsNameError = document.getElementById('vpsNameError');
                    const affiliatedHWIDError = document.getElementById('affiliatedHWIDError');
                    const acceptMessageError = document.getElementById('acceptMessageError');
                    
                    vpsNameError.textContent = '';
                    affiliatedHWIDError.textContent = '';
                    acceptMessageError.textContent = '';
                    
                    let isValid = true;

                    if (!vpsName.trim()) {
                        vpsNameError.textContent = 'Име на VPS е задължително';
                        isValid = false;
                    } else if (vpsName.length < 2 || vpsName.length > 100) {
                        vpsNameError.textContent = 'Името на VPS трябва да бъде между 2 и 100 символа';
                        isValid = false;
                    }

                    if (!affiliatedHWID.trim()) {
                        affiliatedHWIDError.textContent = 'Свързаният HWID е задължителен';
                        isValid = false;
                    } else if (affiliatedHWID.length < 3 || affiliatedHWID.length > 100) {
                        affiliatedHWIDError.textContent = 'HWID трябва да бъде между 3 и 100 символа';
                        isValid = false;
                    }

                    if (!useDefaultMessage && !message.trim()) {
                        acceptMessageError.textContent = 'Съобщението е задължително';
                        isValid = false;
                    } else if (!useDefaultMessage && (message.length < 10 || message.length > 1000)) {
                        acceptMessageError.textContent = 'Съобщението трябва да бъде между 10 и 1000 символа';
                        isValid = false;
                    }

                    return isValid;
                }

                var acceptForm = document.getElementById('acceptNotifyForm');
                acceptForm.addEventListener('submit', function(e) {
                    if (!validateAcceptForm()) {
                        e.preventDefault();
                    }
                });

                var denyForm = document.getElementById('denyNotifyForm');
                denyForm.addEventListener('submit', function(e) {
                    if (!validateDenyForm()) {
                        e.preventDefault();
                    }
                });
            });
        </script>

    @Html.Partial("_IziToastPartial")
    @await Html.PartialAsync("_ValidationScriptsPartial")
}