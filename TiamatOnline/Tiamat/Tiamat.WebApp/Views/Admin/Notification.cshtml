@model Tiamat.WebApp.Models.NotificationViewModel

@{
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
    ViewData["Title"] = "Административен център за известия";
}

<style>
    :root {
        --primary-color: #4361ee;
        --primary-hover: #3a56d4;
        --secondary-color: #7209b7;
        --bg-gradient: linear-gradient(135deg, #4361ee, #7209b7);
        --text-color: #ffffff;
        --light-text: #f8f9fa;
        --card-bg: rgba(28, 28, 30, 0.95);
        --input-bg: rgba(40, 40, 45, 0.9);
        --shadow: 0 8px 30px rgba(0, 0, 0, 0.3);
        --border-radius: 12px;
        --transition: all 0.3s ease;
        --dark-bg: #121212;
        --darker-bg: #0a0a0a;
    }

    #particles-js {
        position: fixed !important;
        width: 100% !important;
        height: 100% !important;
        top: 0 !important;
        left: 0 !important;
        z-index: -1 !important;
    }

    .notification-container {
        max-width: 1000px;
        margin: 2rem auto;
        padding: 0 2rem;
        animation: fadeIn 0.8s ease-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .title-area {
        text-align: center;
        margin-bottom: 2rem;
        animation: fadeInDown 0.8s ease-out;
    }

    @@keyframes fadeInDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .notification-title {
        font-size: 2.5rem;
        font-weight: 600;
        line-height: 1.3;
        color: var(--text-color);
        margin-bottom: 0.5rem;
    }

    .notification-subtitle {
        font-size: 1.2rem;
        color: var(--light-text);
        opacity: 0.8;
    }

    .notification-card {
        background: var(--card-bg);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        margin-bottom: 2rem;
        border: 1px solid rgba(255, 255, 255, 0.05);
        position: relative;
        overflow: hidden;
        padding: 2rem;
        animation: slideInUp 0.8s ease-out;
    }

    .notification-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: var(--bg-gradient);
    }

    @@keyframes slideInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .notification-card-title {
        color: var(--text-color);
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
    }

    .notification-card-title i {
        margin-right: 0.5rem;
        color: var(--primary-color);
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        display: block;
        margin-bottom: 0.5rem;
        color: var(--light-text);
        font-weight: 500;
    }

    .input-group {
        display: flex;
        align-items: center;
    }

    .input-group-text {
        background-color: rgba(40, 40, 45, 0.8);
        color: var(--light-text);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-right: none;
        border-radius: 8px 0 0 8px;
        padding: 0.75rem 1rem;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .form-control {
        flex: 1;
        background-color: var(--input-bg);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 0 8px 8px 0;
        color: var(--text-color);
        padding: 0.75rem 1rem;
        font-size: 1rem;
        transition: var(--transition);
    }

    .form-control::placeholder {
        color: rgba(255, 255, 255, 0.4);
    }

    .form-control:focus {
        outline: none;
        box-shadow: none;
        border-color: var(--primary-color);
    }

    textarea.form-control {
        min-height: 120px;
        resize: vertical;
    }

    .chips-container {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        padding: 10px 12px;
        background-color: var(--input-bg);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 8px;
        min-height: 50px;
        transition: var(--transition);
    }

    .chips-container:focus-within {
        border-color: var(--primary-color);
    }

    .chips-container input {
        flex: 1;
        min-width: 120px;
        background: transparent;
        border: none;
        outline: none;
        color: var(--text-color);
        padding: 4px 0;
    }

    .chips-container input::placeholder {
        color: rgba(255, 255, 255, 0.4);
    }

    .chip {
        display: inline-flex;
        align-items: center;
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 5px 10px;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 500;
        animation: chipAppear 0.3s ease-out;
    }

    @@keyframes chipAppear {
        from {
            opacity: 0;
            transform: scale(0.8);
        }
        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    .chip .remove-chip {
        margin-left: 6px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 18px;
        height: 18px;
        border-radius: 50%;
        background-color: rgba(255, 255, 255, 0.2);
        font-size: 0.8rem;
        transition: var(--transition);
    }

    .chip .remove-chip:hover {
        background-color: rgba(255, 255, 255, 0.4);
    }

    .text-muted {
        color: rgba(255, 255, 255, 0.6) !important;
        font-size: 0.9rem;
        margin-top: 0.5rem;
    }

    .btn-primary {
        width: 100%;
        padding: 0.75rem 1.5rem;
        background: var(--bg-gradient);
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        margin-top: 1rem;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .btn-primary i {
        margin-right: 0.5rem;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(67, 97, 238, 0.2);
    }

    .alert {
        border-radius: 8px;
        padding: 1rem;
        margin-bottom: 1.5rem;
        animation: alertAppear 0.5s ease-out;
    }

    @@keyframes alertAppear {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .alert-success {
        background-color: rgba(46, 213, 115, 0.1);
        border: 1px solid rgba(46, 213, 115, 0.3);
        color: #2ed573;
    }

    .alert-danger {
        background-color: rgba(255, 77, 77, 0.1);
        border: 1px solid rgba(255, 77, 77, 0.3);
        color: #ff4d4d;
    }

    .validation-summary-errors ul {
        list-style: none !important;
        padding-left: 0 !important;
        margin: 0 !important;
    }

    .validation-summary-errors li {
        margin-top: 0.5rem;
    }

    .text-danger {
        color: #ff4d4d !important;
        font-size: 0.9rem;
    }

    .validation-summary-errors {
        display: block;
    }

    .validation-summary-valid {
        display: none;
    }

    @@media (max-width: 992px) {
        .notification-container {
            padding: 0 1.5rem;
        }
    }

    @@media (max-width: 768px) {
        .notification-container {
            padding: 0 1rem;
        }

        .notification-title {
            font-size: 2rem;
        }

        .notification-card {
            padding: 1.5rem;
        }
    }
</style>

<div id="particles-js"></div>

<div class="notification-container">
    <div class="title-area">
        <h1 class="notification-title">Административен център за известия</h1>
        <p class="notification-subtitle">Изпратете ново известие до конкретни потребители или всички.</p>
    </div>

    <div class="notification-card">
        <h2 class="notification-card-title">
            <i class="bi bi-bell-fill"></i>
            Изпращане на ново известие
        </h2>

        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success">
                <i class="bi bi-check-circle-fill me-2"></i>
                @TempData["Success"]
            </div>
        }
        
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger">
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                @TempData["Error"]
            </div>
        }

        <form asp-action="Notification" asp-controller="Admin" method="post">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="form-label">Заглавие</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-card-heading"></i>
                    </span>
                    <input asp-for="Title" class="form-control"
                           placeholder="Въведете заглавие на известието" />
                </div>
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="form-label">Съобщение</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-chat-left-text"></i>
                    </span>
                    <textarea asp-for="Description" class="form-control" rows="3"
                              placeholder="Вашето съобщение"></textarea>
                </div>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Targets" class="form-label">Получатели</label>
                <input asp-for="Targets" type="hidden" id="recipientsHidden" />

                <div id="chipsContainer" class="chips-container" tabindex="0">
                    <input type="text" id="chipsInput" placeholder="@@everyone @@потребител1 @@потребител2 или @@имейл" />
                </div>
                <span asp-validation-for="Targets" class="text-danger"></span>
                <small class="text-muted">
                    <i class="bi bi-info-circle me-1"></i>
                    Напишете множество получатели, разделени с интервал/въвеждане. Дубликатите се игнорират.
                </small>
            </div>

            <button type="submit" class="btn btn-primary">
                <i class="bi bi-send"></i>
                Изпращане на известие
            </button>
        </form>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/particles.js@2.0.0/particles.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            particlesJS('particles-js', {
                "particles": {
                    "number": {
                        "value": 80,
                        "density": {
                            "enable": true,
                            "value_area": 800
                        }
                    },
                    "color": {
                        "value": "#4361ee"
                    },
                    "shape": {
                        "type": "circle",
                        "stroke": {
                            "width": 0,
                            "color": "#000000"
                        },
                        "polygon": {
                            "nb_sides": 5
                        }
                    },
                    "opacity": {
                        "value": 0.5,
                        "random": false,
                        "anim": {
                            "enable": false,
                            "speed": 1,
                            "opacity_min": 0.1,
                            "sync": false
                        }
                    },
                    "size": {
                        "value": 3,
                        "random": true,
                        "anim": {
                            "enable": false,
                            "speed": 40,
                            "size_min": 0.1,
                            "sync": false
                        }
                    },
                    "line_linked": {
                        "enable": true,
                        "distance": 150,
                        "color": "#7209b7",
                        "opacity": 0.4,
                        "width": 1
                    },
                    "move": {
                        "enable": true,
                        "speed": 2,
                        "direction": "none",
                        "random": false,
                        "straight": false,
                        "out_mode": "out",
                        "bounce": false,
                        "attract": {
                            "enable": false,
                            "rotateX": 600,
                            "rotateY": 1200
                        }
                    }
                },
                "interactivity": {
                    "detect_on": "canvas",
                    "events": {
                        "onhover": {
                            "enable": true,
                            "mode": "grab"
                        },
                        "onclick": {
                            "enable": true,
                            "mode": "push"
                        },
                        "resize": true
                    },
                    "modes": {
                        "grab": {
                            "distance": 140,
                            "line_linked": {
                                "opacity": 1
                            }
                        },
                        "bubble": {
                            "distance": 400,
                            "size": 40,
                            "duration": 2,
                            "opacity": 8,
                            "speed": 3
                        },
                        "repulse": {
                            "distance": 200,
                            "duration": 0.4
                        },
                        "push": {
                            "particles_nb": 4
                        },
                        "remove": {
                            "particles_nb": 2
                        }
                    }
                },
                "retina_detect": true
            });

            let chipsArray = [];
            const chipsContainer = document.getElementById('chipsContainer');
            const chipsInput = document.getElementById('chipsInput');
            const recipientsHidden = document.getElementById('recipientsHidden');

            chipsContainer.addEventListener('click', () => {
                chipsInput.focus();
            });

            chipsInput.addEventListener('keydown', function (e) {
                if (e.key === ' ' || e.key === 'Enter') {
                    e.preventDefault();
                    addChip(chipsInput.value.trim());
                }
            });

            chipsInput.addEventListener('blur', function () {
                if (chipsInput.value.trim() !== '') {
                    addChip(chipsInput.value.trim());
                }
            });

            function addChip(value) {
                if (!value) return;
                let lowerValue = value.toLowerCase();
                if (chipsArray.map(v => v.toLowerCase()).includes(lowerValue)) {
                    chipsInput.value = '';
                    return;
                }
                chipsArray.push(value);
                createChipElement(value);
                chipsInput.value = '';
                updateHiddenField();
            validateRecipients();
            }

            function createChipElement(text) {
                const chip = document.createElement('div');
                chip.classList.add('chip');
                chip.innerText = text;

                const removeBtn = document.createElement('span');
                removeBtn.classList.add('remove-chip');
                removeBtn.innerHTML = '×';
                removeBtn.addEventListener('click', (e) => {
                    e.stopPropagation();
                    chipsContainer.removeChild(chip);
                    chipsArray = chipsArray.filter(c => c !== text);
                    updateHiddenField();
                });
                
                chip.appendChild(removeBtn);
                chipsContainer.insertBefore(chip, chipsInput);
            }

            function updateHiddenField() {
                recipientsHidden.value = chipsArray.join(' ');
                validateRecipients();
            }

            function validateRecipients() {
                recipientsHidden.setCustomValidity(chipsArray.length === 0 ? 'Целевата група е задължителна' : '');
            }

            var form = document.querySelector('form');
            form.addEventListener('submit', function(e) {
                validateRecipients();
                if (chipsArray.length === 0) {
                    e.preventDefault();
                    form.reportValidity();
                    return false;
                }
            });
        });
    </script>

    @Html.Partial("_IziToastPartial")
    @await Html.PartialAsync("_ValidationScriptsPartial")
}