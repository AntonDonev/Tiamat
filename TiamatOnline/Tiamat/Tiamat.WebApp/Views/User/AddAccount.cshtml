@using Tiamat.Models
@{
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}
@model Tiamat.Models.Account
@{
    ViewData["Title"] = "Добавяне на акаунт";
}

<style>
    :root {
        --primary-color: #4361ee;
        --primary-hover: #3a56d4;
        --secondary-color: #7209b7;
        --bg-gradient: linear-gradient(135deg, #4361ee, #7209b7);
        --text-color: #ffffff;
        --light-text: #f8f9fa;
        --card-bg: rgba(28, 28, 30, 0.95);
        --input-bg: rgba(40, 40, 45, 0.9);
        --shadow: 0 8px 30px rgba(0, 0, 0, 0.3);
        --border-radius: 12px;
        --transition: all 0.3s ease;
        --dark-bg: #121212;
        --darker-bg: #0a0a0a;
    }

    #particles-js {
        position: fixed !important;
        width: 100% !important;
        height: 100% !important;
        top: 0 !important;
        left: 0 !important;
        z-index: -1 !important;
    }

    .add-account-container {
        max-width: 800px;
        margin: 2rem auto;
        padding: 0 2rem;
        animation: fadeIn 0.8s ease-out;
    }

    .title {
        font-size: 2.5rem;
        margin-bottom: 1.5rem;
        font-weight: 600;
        line-height: 1.3;
        color: var(--text-color);
        animation: fadeInDown 0.8s ease-out;
        text-align: center;
    }

    .add-account-card {
        background: var(--card-bg);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        padding: 2.5rem;
        position: relative;
        overflow: hidden;
        animation: fadeInUp 0.8s ease-out;
        border: 1px solid rgba(255, 255, 255, 0.05);
    }

        .add-account-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: var(--bg-gradient);
        }

    .form-group {
        margin-bottom: 1.5rem;
    }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            color: var(--light-text);
            font-weight: 500;
            font-size: 0.95rem;
        }

    .form-control {
        width: 100%;
        padding: 0.75rem 1rem;
        background-color: var(--input-bg);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 8px;
        font-size: 1rem;
        transition: var(--transition);
        color: var(--text-color);
    }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
            outline: none;
        }

    select.form-control {
        appearance: none;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='white' class='bi bi-chevron-down' viewBox='0 0 16 16'%3E%3Cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 1rem center;
        background-size: 16px 12px;
    }

    .submit-btn {
        width: 100%;
        padding: 0.9rem;
        background: var(--bg-gradient);
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        margin-top: 1rem;
        letter-spacing: 1px;
    }

        .submit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(67, 97, 238, 0.2);
        }

    .text-danger {
        color: #ff4d4d;
        margin-bottom: 1.5rem;
        padding: 1rem;
        background-color: rgba(255, 77, 77, 0.1);
        border: 1px solid rgba(255, 77, 77, 0.2);
        border-radius: var(--border-radius);
        animation: shake 0.5s ease-in-out;
    }

    .field-validation-error {
        color: #ff4d4d;
        font-size: 0.9rem;
        display: block;
        margin-top: 0.5rem;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    @@keyframes fadeInDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes shake {
        0%, 100% {
            transform: translateX(0);
        }

        10%, 30%, 50%, 70%, 90% {
            transform: translateX(-5px);
        }

        20%, 40%, 60%, 80% {
            transform: translateX(5px);
        }
    }

    @@media (max-width: 768px) {
        .add-account-container {
            padding: 0 1rem;
        }

        .title {
            font-size: 2rem;
        }

        .add-account-card {
            padding: 1.5rem;
        }
    }

    .form-group label {
        position: relative;
        display: inline-block;
    }

    .input-icon {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: rgba(255, 255, 255, 0.5);
        transition: var(--transition);
    }

    .form-control-icon {
        padding-left: 2.5rem;
    }

    .form-control:focus + .input-icon {
        color: var(--primary-color);
    }

    .form-group label i.input-icon {
        position: relative;
        top: auto;
        left: auto;
        transform: none;
        margin-right: 0.5rem;
        vertical-align: middle;
    }
</style>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">

<div id="particles-js"></div>

<div class="add-account-container">
    <h1 class="title">Добавяне на нов акаунт</h1>

    @if (TempData["AlertMessage"] != null)
    {
        <div class="@(TempData["AlertType"]?.ToString() == "error" ? "text-danger" : "text-success")">
            <strong>@TempData["AlertTitle"]</strong>: @TempData["AlertMessage"]
        </div>
    }

    @if (!ViewData.ModelState.IsValid)
    {
        <div asp-validation-summary="All" class="text-danger"></div>
    }

    <div class="add-account-card">
        <form asp-action="AddAccount" asp-controller="User" method="post">
            <div class="form-group">
                <label asp-for="AccountName">
                    <i class="bi bi-person-badge input-icon"></i>
                    Име на акаунт
                </label>
                <input asp-for="AccountName" class="form-control form-control-icon" placeholder="Въведете име на акаунт" />
                <span asp-validation-for="AccountName" class="field-validation-error"></span>
                @if (TempData["Error_AccountName"] != null)
                {
                    <div class="field-validation-error">@TempData["Error_AccountName"]</div>
                }
            </div>

            <div class="form-group">
                <label asp-for="InitialCapital">
                    <i class="bi bi-cash-coin input-icon"></i>
                    Начален капитал
                </label>
                <input asp-for="InitialCapital" type="number" step="0.01" class="form-control form-control-icon" placeholder="Въведете начален капитал" />
                <span asp-validation-for="InitialCapital" class="field-validation-error"></span>
                @if (TempData["Error_InitialCapital"] != null)
                {
                    <div class="field-validation-error">@TempData["Error_InitialCapital"]</div>
                }
            </div>

            <div class="form-group">
                <label asp-for="Platform">
                    <i class="bi bi-display input-icon"></i>
                    Платформа
                </label>
                <select asp-for="Platform" class="form-control form-control-icon">
                    <option value="MT5">MT5</option>
                </select>
                <span asp-validation-for="Platform" class="field-validation-error"></span>
                @if (TempData["Error_Platform"] != null)
                {
                    <div class="field-validation-error">@TempData["Error_Platform"]</div>
                }
            </div>

            <div class="form-group">
                <label asp-for="BrokerLogin">
                    <i class="bi bi-person-lock input-icon"></i>
                    Брокерски логин
                </label>
                <input asp-for="BrokerLogin" class="form-control form-control-icon" placeholder="Въведете брокерски логин" />
                <span asp-validation-for="BrokerLogin" class="field-validation-error"></span>
                @if (TempData["Error_BrokerLogin"] != null)
                {
                    <div class="field-validation-error">@TempData["Error_BrokerLogin"]</div>
                }
            </div>

            <div class="form-group">
                <label asp-for="BrokerPassword">
                    <i class="bi bi-lock input-icon"></i>
                    Брокерска парола
                </label>
                <input asp-for="BrokerPassword" type="password" class="form-control form-control-icon" placeholder="Въведете брокерска парола" />
                <span asp-validation-for="BrokerPassword" class="field-validation-error"></span>
                @if (TempData["Error_BrokerPassword"] != null)
                {
                    <div class="field-validation-error">@TempData["Error_BrokerPassword"]</div>
                }
            </div>

            <div class="form-group">
                <label asp-for="BrokerServer">
                    <i class="bi bi-server input-icon"></i>
                    Брокерски сървър
                </label>
                <input asp-for="BrokerServer" class="form-control form-control-icon" placeholder="Въведете брокерски сървър" />
                <span asp-validation-for="BrokerServer" class="field-validation-error"></span>
                @if (TempData["Error_BrokerServer"] != null)
                {
                    <div class="field-validation-error">@TempData["Error_BrokerServer"]</div>
                }
            </div>

            <div class="form-group">
                <label asp-for="AccountSettingsId">
                    <i class="bi bi-gear input-icon"></i>
                    Настройки на акаунта
                </label>
                <select asp-for="AccountSettingsId" class="form-control form-control-icon">
                    <option value="">Избери</option>
                    @foreach (var setting in (ViewBag.AccountSettings as List<AccountSetting> ?? new List<AccountSetting>()))
                    {
                        <option value="@setting.AccountSettingId">@setting.SettingName</option>
                    }
                </select>
                <span asp-validation-for="AccountSettingsId" class="field-validation-error"></span>
                @if (TempData["Error_AccountSettingsId"] != null)
                {
                    <div class="field-validation-error">@TempData["Error_AccountSettingsId"]</div>
                }
            </div>

            <button type="submit" class="submit-btn">
                <i class="bi bi-plus-circle me-2"></i> Добавяне на акаунт
            </button>
        </form>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/particles.js@2.0.0/particles.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            particlesJS('particles-js', {
                "particles": {
                    "number": {
                        "value": 80,
                        "density": {
                            "enable": true,
                            "value_area": 800
                        }
                    },
                    "color": {
                        "value": "#4361ee"
                    },
                    "shape": {
                        "type": "circle",
                        "stroke": {
                            "width": 0,
                            "color": "#000000"
                        },
                        "polygon": {
                            "nb_sides": 5
                        }
                    },
                    "opacity": {
                        "value": 0.5,
                        "random": false,
                        "anim": {
                            "enable": false,
                            "speed": 1,
                            "opacity_min": 0.1,
                            "sync": false
                        }
                    },
                    "size": {
                        "value": 3,
                        "random": true,
                        "anim": {
                            "enable": false,
                            "speed": 40,
                            "size_min": 0.1,
                            "sync": false
                        }
                    },
                    "line_linked": {
                        "enable": true,
                        "distance": 150,
                        "color": "#7209b7",
                        "opacity": 0.4,
                        "width": 1
                    },
                    "move": {
                        "enable": true,
                        "speed": 2,
                        "direction": "none",
                        "random": false,
                        "straight": false,
                        "out_mode": "out",
                        "bounce": false,
                        "attract": {
                            "enable": false,
                            "rotateX": 600,
                            "rotateY": 1200
                        }
                    }
                },
                "interactivity": {
                    "detect_on": "canvas",
                    "events": {
                        "onhover": {
                            "enable": true,
                            "mode": "grab"
                        },
                        "onclick": {
                            "enable": true,
                            "mode": "push"
                        },
                        "resize": true
                    },
                    "modes": {
                        "grab": {
                            "distance": 140,
                            "line_linked": {
                                "opacity": 1
                            }
                        },
                        "bubble": {
                            "distance": 400,
                            "size": 40,
                            "duration": 2,
                            "opacity": 8,
                            "speed": 3
                        },
                        "repulse": {
                            "distance": 200,
                            "duration": 0.4
                        },
                        "push": {
                            "particles_nb": 4
                        },
                        "remove": {
                            "particles_nb": 2
                        }
                    }
                },
                "retina_detect": true
            });

            const formControls = document.querySelectorAll('.form-control');
            formControls.forEach((control, index) => {
                control.style.opacity = '0';
                control.style.transform = 'translateY(20px)';

                setTimeout(() => {
                    control.style.transition = 'all 0.3s ease';
                    control.style.opacity = '1';
                    control.style.transform = 'translateY(0)';
                }, 100 + (index * 50));
            });
        });
    </script>

    @Html.Partial("_IziToastPartial")
    @await Html.PartialAsync("_ValidationScriptsPartial")
}