@model Tiamat.WebApp.Models.AccountCenterViewModel
@{
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
    ViewData["Title"] = "Списък на акаунтите";
}

@functions {
    string GetStatusClass(string status)
    {
        return status?.ToLower() switch
        {
            "active" => "status-active",
            "pending" => "status-pending",
            "failed" or "closed" => "status-red",
            _ => ""
        };
    }
}

<style>
    :root {
        --primary-color: #4361ee;
        --primary-hover: #3a56d4;
        --secondary-color: #7209b7;
        --bg-gradient: linear-gradient(135deg, #4361ee, #7209b7);
        --text-color: #ffffff;
        --light-text: #f8f9fa;
        --card-bg: rgba(28, 28, 30, 0.95);
        --input-bg: rgba(40, 40, 45, 0.9);
        --shadow: 0 8px 30px rgba(0, 0, 0, 0.3);
        --border-radius: 12px;
        --transition: all 0.3s ease;
        --dark-bg: #121212;
        --darker-bg: #0a0a0a;
    }

    #particles-js {
        position: fixed !important;
        width: 100% !important;
        height: 100% !important;
        top: 0 !important;
        left: 0 !important;
        z-index: -1 !important;
    }

    .account-list-container {
        max-width: 1440px;
        margin: 2rem auto;
        padding: 0 2rem;
        animation: fadeIn 0.8s ease-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .list-title {
        font-size: 2.5rem;
        margin-bottom: 1.5rem;
        font-weight: 600;
        line-height: 1.3;
        color: var(--text-color);
        animation: fadeInDown 0.8s ease-out;
    }

    @@keyframes fadeInDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .filter-card, .accounts-card {
        background: var(--card-bg);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        margin-bottom: 2rem;
        border: 1px solid rgba(255, 255, 255, 0.05);
        position: relative;
        overflow: hidden;
    }

    .filter-card::before, .accounts-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: var(--bg-gradient);
    }

    .filter-title, .accounts-card-header h2 {
        color: var(--text-color);
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
    }

    .filter-card {
        padding: 2rem;
        animation: fadeInLeft 0.8s ease-out;
    }

    @@keyframes fadeInLeft {
        from {
            opacity: 0;
            transform: translateX(-30px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    .filter-form {
        display: flex;
        flex-wrap: wrap;
        gap: 1.5rem;
    }

    .filter-group {
        flex: 1 1 200px;
        display: flex;
        flex-direction: column;
    }

    .filter-group label {
        margin-bottom: 0.5rem;
        color: var(--light-text);
        font-size: 0.9rem;
    }

    .form-select {
        width: 100%;
        padding: 0.75rem 1rem;
        background-color: var(--input-bg);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 8px;
        font-size: 1rem;
        transition: var(--transition);
        color: var(--text-color);
        appearance: none;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='white' class='bi bi-chevron-down' viewBox='0 0 16 16'%3E%3Cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 1rem center;
        background-size: 16px 12px;
    }

    .form-select:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
        outline: none;
    }

    .filter-submit {
        display: flex;
        align-items: flex-end;
        flex: 0 0 auto;
    }

    .apply-btn {
        padding: 0.75rem 1.5rem;
        background: var(--bg-gradient);
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        letter-spacing: 1px;
    }

    .apply-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(67, 97, 238, 0.2);
    }

    .accounts-card {
        padding: 0;
        animation: fadeInRight 0.8s ease-out;
    }

    @@keyframes fadeInRight {
        from {
            opacity: 0;
            transform: translateX(30px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    .accounts-card-header {
        padding: 1.5rem 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 1px solid rgba(255, 255, 255, 0.05);
    }

    .btn-add-account {
        padding: 0.6rem 1.2rem;
        background: var(--bg-gradient);
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 0.9rem;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        text-decoration: none;
        display: inline-block;
    }

    .btn-add-account:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(67, 97, 238, 0.2);
    }

    .accounts-card-body {
        padding: 1.5rem 2rem;
    }

    .no-accounts {
        text-align: center;
        padding: 2rem;
        color: var(--light-text);
        font-size: 1.1rem;
    }

    .table-responsive {
        overflow-x: auto;
        width: 100%;
    }

    .account-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
    }

    .account-table th {
        text-align: left;
        padding: 1rem;
        color: var(--light-text);
        font-weight: 600;
        font-size: 0.9rem;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .account-table td {
        padding: 1rem;
        color: var(--light-text);
        font-size: 0.95rem;
        border-bottom: 1px solid rgba(255, 255, 255, 0.05);
    }

    .account-table tbody tr {
        transition: var(--transition);
    }

    .account-table tbody tr:hover {
        background-color: rgba(255, 255, 255, 0.03);
    }

    .status-active {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        background-color: rgba(46, 213, 115, 0.2);
        border: 1px solid rgba(46, 213, 115, 0.5);
        color: #2ed573;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
    }

    .status-pending {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        background-color: rgba(255, 165, 2, 0.2);
        border: 1px solid rgba(255, 165, 2, 0.5);
        color: #ffa502;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
    }

    .status-red {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        background-color: rgba(255, 77, 77, 0.2);
        border: 1px solid rgba(255, 77, 77, 0.5);
        color: #ff4d4d;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
    }

    .btn-action {
        padding: 0.4rem 0.8rem;
        border-radius: 6px;
        font-size: 0.8rem;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        text-decoration: none;
        display: inline-block;
    }

    .btn-edit {
        background: var(--bg-gradient);
        color: white;
    }

    .btn-edit:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(67, 97, 238, 0.2);
    }

    @@media (max-width: 1200px) {
        .account-list-container {
            padding: 0 1.5rem;
        }
    }

    @@media (max-width: 992px) {
        .filter-form {
            flex-direction: column;
            gap: 1rem;
        }

        .filter-group {
            flex: 1 1 100%;
        }

        .accounts-card-header {
            flex-direction: column;
            gap: 1rem;
            align-items: flex-start;
        }

        .account-table {
            min-width: 900px;
        }
    }

    @@media (max-width: 768px) {
        .account-list-container {
            padding: 0 1rem;
        }

        .list-title {
            font-size: 2rem;
        }

        .filter-card, .accounts-card {
            padding: 1.5rem;
        }
    }

    @@keyframes pulse {
        0% {
            transform: scale(1);
        }
        50% {
            transform: scale(1.05);
        }
        100% {
            transform: scale(1);
        }
    }

    .table-row-appear {
        animation: tableRowAppear 0.5s ease-out forwards;
    }

    @@keyframes tableRowAppear {
        from {
            opacity: 0;
            transform: translateY(10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

<div id="particles-js"></div>

<div class="account-list-container">
    <h1 class="list-title">Списък на акаунтите</h1>

    <div class="filter-card">
        <h2 class="filter-title">Филтри</h2>
        <form method="post" asp-action="AccountCenter" asp-controller="User" class="filter-form">
            <div class="filter-group">
                <label for="PlatformFilter">Платформа</label>
                <select name="PlatformFilter" id="PlatformFilter" class="form-select">
                    <option value="">Всички</option>
                    <option value="MT4"
                            selected="@(Model.PlatformFilter == "MT4" ? "selected" : null)">
                        MT4
                    </option>
                    <option value="MT5"
                            selected="@(Model.PlatformFilter == "MT5" ? "selected" : null)">
                        MT5
                    </option>
                </select>
            </div>

            <div class="filter-group">
                <label for="StatusFilter">Статус</label>
                <select name="StatusFilter" id="StatusFilter" class="form-select">
                    <option value="">Всички</option>
                    <option value="Pending"
                            selected="@(Model.StatusFilter == "Pending" ? "selected" : null)">
                        Изчаква
                    </option>
                    <option value="Active"
                            selected="@(Model.StatusFilter == "Active" ? "selected" : null)">
                        Активен
                    </option>
                    <option value="Failed"
                            selected="@(Model.StatusFilter == "Failed" ? "selected" : null)">
                        Неуспешен
                    </option>
                    <option value="Closed"
                            selected="@(Model.StatusFilter == "Closed" ? "selected" : null)">
                        Затворен
                    </option>
                </select>
            </div>

            <div class="filter-group">
                <label for="AccountSettingFilter">Настройка на акаунта</label>
                <select name="AccountSettingFilter" id="AccountSettingFilter" class="form-select">
                    <option value="">Всички</option>
                    @foreach (var setting in Model.AccountSettings)
                    {
                            <option value="@setting.AccountSettingId"
                                    selected="@(setting.AccountSettingId.ToString() == Model.AccountSettingFilter ? "selected" : null)">
                            @setting.SettingName
                            </option>
                    }
                </select>
            </div>

            <div class="filter-submit">
                <button type="submit" class="apply-btn">Приложи</button>
            </div>
        </form>
    </div>

    <div class="accounts-card">
        <div class="accounts-card-header">
            <h2>Всички акаунти</h2>
            <div class="add-account-button">
                <a asp-action="AddAccount" asp-controller="User" class="btn-add-account">
                    <i class="bi bi-plus-circle me-1"></i> Добави акаунт
                </a>
            </div>
        </div>

        <div class="accounts-card-body">
            @if (Model.Accounts == null || !Model.Accounts.Any())
            {
                    <div class="no-accounts">Няма намерени акаунти.</div>
            }
            else
            {
                    <div class="table-responsive">
                        <table class="account-table">
                            <thead>
                                <tr>
                                    <th>Име</th>
                                    <th>Първоначален капитал</th>
                                    <th>Текущ капитал</th>
                                    <th>Платформа</th>
                                    <th>Настройка на акаунта</th>
                                    <th>Създаден на</th>
                                    <th>Статус</th>
                                    <th>Действия</th>
                                </tr>
                            </thead>
                            <tbody>
                            @foreach (var account in Model.Accounts.Select((value, i) => new { Value = value, Index = i }))
                            {
                                        <tr class="table-row-appear" style="animation-delay: @(account.Index * 0.1)s">
                                            <td>@account.Value.AccountName</td>
                                            <td>@account.Value.InitialCapital</td>
                                            <td>@account.Value.CurrentCapital</td>
                                            <td>@account.Value.Platform</td>
                                            <td>@(account.Value.AccountSettingName ?? "Няма")</td>
                                            <td>@account.Value.CreatedAt.ToShortDateString()</td>
                                            <td>
                                                <span class="@GetStatusClass(account.Value.Status)">
                                            @account.Value.Status
                                                </span>
                                            </td>
                                            <td class="action-cell">
                                                <a asp-action="ViewAccount"
                                                   asp-controller="User"
                                                   asp-route-id="@account.Value.AccountId"
                                                   class="btn-action btn-edit">
                                                    <i class="bi bi-eye me-1"></i> Преглед
                                                </a>
                                            </td>
                                        </tr>
                            }
                            </tbody>
                        </table>
                    </div>
            }
        </div>
    </div>
</div>

@section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/particles.js@2.0.0/particles.min.js"></script>
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                particlesJS('particles-js', {
                    "particles": {
                        "number": {
                            "value": 80,
                            "density": {
                                "enable": true,
                                "value_area": 800
                            }
                        },
                        "color": {
                            "value": "#4361ee"
                        },
                        "shape": {
                            "type": "circle",
                            "stroke": {
                                "width": 0,
                                "color": "#000000"
                            },
                            "polygon": {
                                "nb_sides": 5
                            }
                        },
                        "opacity": {
                            "value": 0.5,
                            "random": false,
                            "anim": {
                                "enable": false,
                                "speed": 1,
                                "opacity_min": 0.1,
                                "sync": false
                            }
                        },
                        "size": {
                            "value": 3,
                            "random": true,
                            "anim": {
                                "enable": false,
                                "speed": 40,
                                "size_min": 0.1,
                                "sync": false
                            }
                        },
                        "line_linked": {
                            "enable": true,
                            "distance": 150,
                            "color": "#7209b7",
                            "opacity": 0.4,
                            "width": 1
                        },
                        "move": {
                            "enable": true,
                            "speed": 2,
                            "direction": "none",
                            "random": false,
                            "straight": false,
                            "out_mode": "out",
                            "bounce": false,
                            "attract": {
                                "enable": false,
                                "rotateX": 600,
                                "rotateY": 1200
                            }
                        }
                    },
                    "interactivity": {
                        "detect_on": "canvas",
                        "events": {
                            "onhover": {
                                "enable": true,
                                "mode": "grab"
                            },
                            "onclick": {
                                "enable": true,
                                "mode": "push"
                            },
                            "resize": true
                        },
                        "modes": {
                            "grab": {
                                "distance": 140,
                                "line_linked": {
                                    "opacity": 1
                                }
                            },
                            "bubble": {
                                "distance": 400,
                                "size": 40,
                                "duration": 2,
                                "opacity": 8,
                                "speed": 3
                            },
                            "repulse": {
                                "distance": 200,
                                "duration": 0.4
                            },
                            "push": {
                                "particles_nb": 4
                            },
                            "remove": {
                                "particles_nb": 2
                            }
                        }
                    },
                    "retina_detect": true
                });

                animateTableRows();

                function animateTableRows() {
                    const rows = document.querySelectorAll('.table-row-appear');
                    rows.forEach((row, index) => {
                        row.style.opacity = '0';
                        setTimeout(() => {
                            row.style.opacity = '1';
                            row.style.transform = 'translateY(0)';
                        }, 100 * index);
                    });
                }
            });
        </script>

    @Html.Partial("_IziToastPartial")
    @await Html.PartialAsync("_ValidationScriptsPartial")
}