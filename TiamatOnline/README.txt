В тази папка се съдържат всички необходими файлове за осъществяване на РЕАЛНА връзка и автоматична търговия от страна на изкуствен интелект.

Предварителни изисквания

- Инсталиран Python 3.12
- Платформа MetaTrader 5 (достъпна чрез включената RDP връзка)
- Visual Studio за компилиране на DLL (при необходимост от промени)

Архитектура на системата

Системата се състои от три основни компонента:
1. MetaTrader 5 Скриптове:
   - `XAUUSD_SENDER.mq5`: Изпраща данни за цените към Python сървъра
   - `XAUUSD_DLL.mq5`: Изпълнява сделки на базата на сигнали от Python сървъра

2. Python Backend (`livepipeline.py`):
   - Модел за машинно обучение, който анализира ценовите данни
   - Генерира търговски сигнали
   - Поддържа комуникация с MetaTrader 5

3. Уеб интерфейс:
   - Мониторинг на свързаните устройства
   - Проследяване на търговската производителност

Инструкции за настройка

Стъпка 1: Подготовка на данни за новините
1. Изтеглете данни за високо-импактни новини от: https://robots4forex.com/historical-forex-economic-calendar-2007-present-csv-format/
2. Поставете CSV файла в папката TiamatOnline
3. Преименувайте го на: `high_impact_news.csv`

Стъпка 2: Стартиране на Python сървъра
1. Отворете Command Prompt
2. Навигирайте до директорията TiamatOnline: `cd път/до/TiamatOnline`
3. Стартирайте сървъра: `python livepipeline.py`
4. Трябва да видите потвърждаващи логове, показващи че сървърът работи на:
   - HTTP Сървър: Порт 8020 (за получаване на данни за баровете)
   - API Сървър: Порт 8000 (за команди/контрол)
   - Socket Сървър: Порт 12345 (за DLL комуникация)

Стъпка 3: Стартиране на уеб приложението
1. Стартирайте уеб приложението, което ще:
   - Изпраща API заявки към Python сървъра
   - Показва всички свързани устройства, готови за търговия
   - Показва търговска статистика и производителност

Стъпка 4: Настройка на MetaTrader платформата

4.1: Свързване към MetaTrader средата
1. Отворете файла `MetaTrader.rdp`, за да се свържете с подготвената Windows среда

4.2: Подготовка на DLL
1. Отворете проекта "SignalProvider" във Visual Studio
2. Актуализирайте IP адреса, за да съвпада с вашето устройство (където се изпълнява livepipeline.py)
3. Компилирайте проекта, използвайки x64 конфигурация и Multi-Threaded Debug (/MTD) Code Generation:
   - Кликнете с десен бутон върху проекта → Properties
   - Навигирайте до C/C++ → Code Generation
   - Задайте Runtime Library на "Multi-Threaded Debug (/MTD)"
4. Намерете компилирания DLL файл в изходната папка
5. Копирайте DLL файла в папката "Libraries" в MetaTrader

4.3: Конфигуриране на MetaTrader
1. В MetaTrader, кликнете върху "Tools" в горното меню
2. Изберете "Expert Advisors" от панела
3. Конфигурирайте връзката със сървъра:
   - Въведете IP адреса, където се изпълнява вашият Python сървър
   - По подразбиране портове: 8020 (HTTP), 8000 (API), 12345 (Socket)

4.4: Прикрепване на скриптове към графики
1. Плъзнете и пуснете `Tiamat_Sender` върху горната XAUUSD 1M графика:
   - Първо, уверете се, че сте актуализирали параметъра ServerURL вътре в скрипта, за да съвпада с IP адреса на вашия сървър
   - Този скрипт ще изпраща пазарни данни към вашия Python модел
2. Плъзнете и пуснете `Tiamat_DLL` върху долната XAUUSD 1M графика:
   - Този скрипт ще изпълнява сделки на базата на сигнали от вашия Python модел

Опции за конфигурация

Сървърът `livepipeline.py` има няколко конфигурируеми параметъра:

- `HOST`: IP адрес на сървъра (по подразбиране: "0.0.0.0")
- `HTTP_PORT`: Порт за получаване на данни за баровете (по подразбиране: 8020)
- `API_PORT`: Порт за API команди (по подразбиране: 8000)
- `SOCKET_PORT`: Порт за DLL комуникация (по подразбиране: 12345)
- `MAX_CONCURRENT_TRADES`: Максимален брой едновременни сделки (по подразбиране: 1)
- `DEFAULT_RISK_PCT`: Процент риск по подразбиране за всяка сделка (може да бъде променен)
- `BUFFER_SIZE`: Брой ценови барове, които да се съхраняват в паметта (по подразбиране: 300)

Проверка

Когато е правилно настроена, системата трябва да започне да търгува автоматично. Обикновено влиза в 1-2 сделки на ден, в зависимост от пазарните условия и новинарските събития.

Системата автоматично ще избягва търговия по време на високо-импактни новинарски събития и по време на периода за поддръжка (между 22:00 и 00:00 часа).

Отстраняване на проблеми

- Ако срещнете проблеми с връзката, проверете дали:
  1. Всички IP адреси са правилно конфигурирани
  2. Вашата защитна стена (firewall) позволява необходимите портове
  3. Python сървърът работи преди свързването на MetaTrader
  
- Ако сделките не се изпълняват, проверете:
  1. DLL е правилно компилиран и поставен в папката Libraries
  2. Expert Advisors са активирани в MetaTrader
  3. Изходните логове както в MetaTrader, така и в Python конзолата

Логове и мониторинг

Python сървърът генерира подробни логове за:
- Свързани клиенти
- Получени пазарни данни
- Търговски сигнали
- Изпълнения на сделки и потвърждения

Проследявайте тези логове, за да се уверите, че системата функционира правилно.